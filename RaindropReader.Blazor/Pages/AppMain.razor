@using RaindropReader.Plugins 
@using RaindropReader.Shared.Components
@using RaindropReader.Shared.Services.Client
@using RaindropReader.Shared.Services.Storage

@attribute [Route(Startup.AppRoute)]
@attribute [Route(Startup.AppItemRoute)]

@inject ReaderService _readerService

@code {
    [Parameter]
    public string Item { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await _readerService.LoadStorageAsync(IStorageProvider.LocalUser, true);
        _readerService.PluginManager.AddPluginProvider(PluginProvider.Instance);
        await _readerService.PluginManager.AddPluginAsync("RaindropReader.Plugins.TestPlugin", "");
        if (!string.IsNullOrWhiteSpace(Item))
        {
            _readerService.HandleItemRoute(Item);
        }
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return Task.CompletedTask;
        }
        return _readerService.InitJSAsync();
    }
}

<MainViewComponent />
